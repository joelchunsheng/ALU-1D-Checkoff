module alu_test_rom_a (
    input addr[4],    // Address width depends on the number of test cases (16 entries)
    output data[32]   // Output A[32]
) {
    sig a[32]
    always {
        case (addr) {
            0: a = 32d15  
            1: a = 32d2147483647  
            2: a = 32d0  
            3: a = 32d20
            4: a = 32d15
            5: a = 32d0
            6: a = 32d20
            7: a = 7
            8: a = 32d100000
            9: a = 32d0
            10: a = 32d50
            11: a = 32d2147483647
            12: a = 32hFFFFFFFF
            13: a = 32d5
            14: a = 32d91
            15: a = 32d2147483647
            16: a = 32d5
            17: a = 32d91
            18: a = 32d5
            19: a = 32d5
            20: a = 32d91
            21: a = 32d1
            22: a = 32d5
            23: a = 32d91
            24: a = 32hFFFFFFFF
            25: a = 32hFFFFFFFF
            26: a = 32d15
            27: a = 32d20
            28: a = 32d30
            29: a = 32d15
            30: a = 32d20
            default: a = 32d0
        }
        data = a
    }
}